source meta.build

TYPE="archive"
URL="https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.19.1.tar.gz"
SHA3="2ef2eb1f06d7d1829980ba2086b5033db16df125879f3770faccf08df065b162"

build() {
  eval "CMAKE_CONFIGURE_ARGS=${CXXPM_CMAKE_CONFIGURE_ARGS}"
  eval "CMAKE_BUILD_ARGS=${CXXPM_CMAKE_BUILD_ARGS}"

  cd ${CXXPM_SOURCE_DIR}/protobuf-${CXXPM_PACKAGE_VERSION}/cmake
  patch -p1 < ${CXXPM_PACKAGE_DIR}/3.19.1-static-runtime.patch

  cd ${CXXPM_BUILD_DIR}
  cmake \
    ${CXXPM_SOURCE_DIR}/protobuf-${CXXPM_PACKAGE_VERSION}/cmake \
    -DCMAKE_INSTALL_PREFIX=${CXXPM_INSTALL_DIR} \
    -Dprotobuf_BUILD_TESTS=OFF \
    -Dprotobuf_MSVC_STATIC_RUNTIME=OFF \
    "${CMAKE_CONFIGURE_ARGS[@]}"
    
  cmake --build . -j${CXXPM_NPROC} --target install "${CMAKE_BUILD_ARGS[@]}"
}

artifacts() {
  if [ "${CXXPM_SYSTEM_NAME}" = "Windows" ]
  then
    LIBRARY_PREFIX="lib"
    CMAKE_MODULE="cmake/protobuf-config.cmake"
  else
    LIBRARY_PREFIX=${CXXPM_LIBRARY_PREFIX}
    CMAKE_MODULE="lib/cmake/protobuf/protobuf-config.cmake"
  fi
  
  if [ "${CXXPM_BUILD_TYPE}" = "Debug" ]
  then
    DEBUG_SUFFIX="d"
  fi

echo $(cat <<-END
  [
    {"type": "include", "name": "PROTOBUF_INCLUDE_DIRECTORY", "path": "include"},
    {"type": "static_lib", "name": "protobuf::libprotobuf", "path": "lib/${LIBRARY_PREFIX}protobuf${DEBUG_SUFFIX}${CXXPM_STATIC_LIBRARY_SUFFIX}", "includes": ["PROTOBUF_INCLUDE_DIRECTORY"]},
    {"type": "static_lib", "name": "protobuf::libprotobuf-lite", "path": "lib/${LIBRARY_PREFIX}protobuf-lite${DEBUG_SUFFIX}${CXXPM_STATIC_LIBRARY_SUFFIX}", "includes": ["PROTOBUF_INCLUDE_DIRECTORY"]},
    {"type": "static_lib", "name": "protobuf::libprotoc", "path": "lib/${LIBRARY_PREFIX}protoc${DEBUG_SUFFIX}${CXXPM_STATIC_LIBRARY_SUFFIX}", "includes": ["PROTOBUF_INCLUDE_DIRECTORY"]},
    {"type": "executable", "name": "protobuf::protoc", "path": "bin/protoc${CXXPM_EXECUTABLE_SUFFIX}"},
    {"type": "cmake_module", "name": "config", "path": "${CMAKE_MODULE}"}
  ]
END)
}
